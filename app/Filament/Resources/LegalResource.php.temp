<?php declare(strict_types=1);

namespace App\Filament\Resources;

use App\Enums\NavigationGroup;
use App\Filament\Resources\LegalResource\Pages;
use App\Models\Legal;
use Filament\Forms\Form;
use Filament\Resources\Resource;
use Filament\Tables\Table;
use Filament\Forms;
use Filament\Tables;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\SoftDeletingScope;

final class LegalResource extends Resource
{
    protected static ?string $model = Legal::class;

    protected static BackedEnum|string|null $navigationIcon = 'heroicon-o-document-text';

    protected static string|UnitEnum|null $navigationGroup = 'Content';

    protected static ?int $navigationSort = 1;

    public static function getNavigationLabel(): string
    {
        return __('Legal Pages');
    }

    public static function getModelLabel(): string
    {
        return __('Legal Page');
    }

    public static function getPluralModelLabel(): string
    {
        return __('Legal Pages');
    }

    public static function form(Schema $schema): Schema
    {
        return $schema
            ->schema([
                Forms\Components\Section::make(__('Basic Information'))
                    ->schema([
                        Forms\Components\TextInput::make('key')
                            ->label(__('Key'))
                            ->required()
                            ->maxLength(255)
                            ->unique(Legal::class, 'key', ignoreRecord: true)
                            ->helperText(__('Unique identifier for this legal page')),
                        Forms\Components\Toggle::make('is_enabled')
                            ->label(__('Enabled'))
                            ->default(true),
                    ])
                    ->columns(2),
                Forms\Components\Section::make(__('Translations'))
                    ->schema([
                        Forms\Components\Repeater::make('translations')
                            ->label(__('Translations'))
                            ->relationship('translations')
                            ->schema([
                                Forms\Components\Select::make('locale')
                                    ->label(__('Language'))
                                    ->options([
                                        'en' => __('English'),
                                        'lt' => __('Lithuanian'),
                                        'de' => __('German'),
                                    ])
                                    ->required()
                                    ->distinct()
                                    ->disableOptionsWhenSelectedInSiblingRepeaterItems(),
                                Forms\Components\TextInput::make('title')
                                    ->label(__('Title'))
                                    ->required()
                                    ->maxLength(255),
                                Forms\Components\TextInput::make('slug')
                                    ->label(__('Slug'))
                                    ->required()
                                    ->maxLength(255),
                                Forms\Components\RichEditor::make('content')
                                    ->label(__('Content'))
                                    ->required()
                                    ->columnSpanFull(),
                            ])
                            ->columns(2)
                            ->itemLabel(fn(array $state): ?string => $state['locale'] ? __('Translation') . ' (' . strtoupper($state['locale']) . ')' : null)
                            ->collapsible()
                            ->cloneable()
                            ->addActionLabel(__('Add Translation'))
                            ->deleteAction(
                                fn(Forms\Components\Actions\Action $action) => $action->requiresConfirmation()
                            ),
                    ]),
            ]);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->columns([
                Tables\Columns\TextColumn::make('key')
                    ->label(__('Key'))
                    ->searchable()
                    ->sortable(),
                Tables\Columns\IconColumn::make('is_enabled')
                    ->label(__('Enabled'))
                    ->boolean()
                    ->sortable(),
                Tables\Columns\TextColumn::make('translations_count')
                    ->label(__('Translations'))
                    ->counts('translations')
                    ->sortable(),
                Tables\Columns\TextColumn::make('created_at')
                    ->label(__('Created'))
                    ->dateTime()
                    ->sortable()
                    ->toggleable(isToggledHiddenByDefault: true),
                Tables\Columns\TextColumn::make('updated_at')
                    ->label(__('Updated'))
                    ->dateTime()
                    ->sortable()
                    ->toggleable(isToggledHiddenByDefault: true),
            ])
            ->filters([
                Tables\Filters\TernaryFilter::make('is_enabled')
                    ->label(__('Enabled'))
                    ->placeholder(__('All'))
                    ->trueLabel(__('Enabled'))
                    ->falseLabel(__('Disabled')),
            ])
            ->actions([
                Tables\Actions\ViewAction::make(),
                Tables\Actions\EditAction::make(),
                Tables\Actions\DeleteAction::make(),
            ])
            ->bulkActions([
                Tables\Actions\BulkActionGroup::make([
                    Tables\Actions\DeleteBulkAction::make(),
                ]),
            ]);
    }

    public static function getRelations(): array
    {
        return [
            //
        ];
    }

    public static function getPages(): array
    {
        return [
            'index' => Pages\ListLegals::route('/'),
            'create' => Pages\CreateLegal::route('/create'),
            'view' => Pages\ViewLegal::route('/{record}'),
            'edit' => Pages\EditLegal::route('/{record}/edit'),
        ];
    }
}
