<?php declare(strict_types=1);

namespace App\Filament\Resources;

use App\Filament\Resources\AddressResource\Pages;
use App\Models\Address;
use App\Models\User;
use App\Models\Country;
use Filament\Forms;
use Filament\Forms\Form;
use Filament\Resources\Resource;
use Filament\Tables;
use Filament\Tables\Table;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\SoftDeletingScope;

final class AddressResource extends Resource
{
    protected static ?string $model = Address::class;

    protected static ?string $navigationIcon = 'heroicon-o-map-pin';

    protected static ?string $navigationGroup = 'Customers';

    protected static ?int $navigationSort = 2;

    public static function getModelLabel(): string
    {
        return __('translations.address');
    }

    public static function getPluralModelLabel(): string
    {
        return __('translations.addresses');
    }

    public static function form(Form $form): Form
    {
        return $form
            ->schema([
                Forms\Components\Section::make(__('translations.address_information'))
                    ->schema([
                        Forms\Components\Select::make('user_id')
                            ->label(__('translations.user'))
                            ->relationship('user', 'name')
                            ->searchable()
                            ->preload()
                            ->required(),
                        
                        Forms\Components\Select::make('type')
                            ->label(__('translations.type'))
                            ->options([
                                'billing' => __('translations.address_type_billing'),
                                'shipping' => __('translations.address_type_shipping'),
                            ])
                            ->required()
                            ->default('shipping'),
                        
                        Forms\Components\Toggle::make('is_default')
                            ->label(__('admin.address.form.is_default'))
                            ->default(false),
                    ])
                    ->columns(3),
                
                Forms\Components\Section::make(__('admin.address.form.address_details'))
                    ->schema([
                        Forms\Components\TextInput::make('first_name')
                            ->label(__('admin.address.form.first_name'))
                            ->required()
                            ->maxLength(255),
                        
                        Forms\Components\TextInput::make('last_name')
                            ->label(__('admin.address.form.last_name'))
                            ->required()
                            ->maxLength(255),
                        
                        Forms\Components\TextInput::make('company')
                            ->label(__('admin.address.form.company'))
                            ->maxLength(255),
                        
                        Forms\Components\TextInput::make('address_line_1')
                            ->label(__('admin.address.form.address_line_1'))
                            ->required()
                            ->maxLength(255),
                        
                        Forms\Components\TextInput::make('address_line_2')
                            ->label(__('admin.address.form.address_line_2'))
                            ->maxLength(255),
                        
                        Forms\Components\TextInput::make('city')
                            ->label(__('admin.address.form.city'))
                            ->required()
                            ->maxLength(255),
                        
                        Forms\Components\TextInput::make('state')
                            ->label(__('admin.address.form.state'))
                            ->maxLength(255),
                        
                        Forms\Components\TextInput::make('postal_code')
                            ->label(__('admin.address.form.postal_code'))
                            ->required()
                            ->maxLength(20),
                        
                        Forms\Components\Select::make('country_id')
                            ->label(__('admin.address.form.country'))
                            ->relationship('country', 'name')
                            ->searchable()
                            ->preload()
                            ->required(),
                    ])
                    ->columns(2),
                
                Forms\Components\Section::make(__('admin.address.form.contact_info'))
                    ->schema([
                        Forms\Components\TextInput::make('phone')
                            ->label(__('admin.address.form.phone'))
                            ->tel()
                            ->maxLength(20),
                        
                        Forms\Components\Textarea::make('notes')
                            ->label(__('admin.address.form.notes'))
                            ->maxLength(500)
                            ->rows(3),
                    ])
                    ->columns(2),
            ]);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->columns([
                Tables\Columns\TextColumn::make('user.name')
                    ->label(__('admin.address.table.user'))
                    ->searchable()
                    ->sortable(),
                
                Tables\Columns\TextColumn::make('type')
                    ->label(__('admin.address.table.type'))
                    ->badge()
                    ->color(fn (string $state): string => match ($state) {
                        'billing' => 'warning',
                        'shipping' => 'success',
                        default => 'gray',
                    }),
                
                Tables\Columns\TextColumn::make('full_name')
                    ->label(__('admin.address.table.full_name'))
                    ->getStateUsing(fn (Address $record): string => "{$record->first_name} {$record->last_name}")
                    ->searchable(['first_name', 'last_name']),
                
                Tables\Columns\TextColumn::make('address_line_1')
                    ->label(__('admin.address.table.address'))
                    ->limit(30)
                    ->searchable(),
                
                Tables\Columns\TextColumn::make('city')
                    ->label(__('admin.address.table.city'))
                    ->searchable()
                    ->sortable(),
                
                Tables\Columns\TextColumn::make('country.name')
                    ->label(__('admin.address.table.country'))
                    ->sortable(),
                
                Tables\Columns\IconColumn::make('is_default')
                    ->label(__('admin.address.table.is_default'))
                    ->boolean(),
                
                Tables\Columns\TextColumn::make('created_at')
                    ->label(__('admin.address.table.created_at'))
                    ->dateTime()
                    ->sortable()
                    ->toggleable(isToggledHiddenByDefault: true),
            ])
            ->filters([
                Tables\Filters\SelectFilter::make('type')
                    ->label(__('admin.address.filters.type'))
                    ->options([
                        'billing' => __('admin.address.form.type_billing'),
                        'shipping' => __('admin.address.form.type_shipping'),
                    ]),
                
                Tables\Filters\SelectFilter::make('country')
                    ->label(__('admin.address.filters.country'))
                    ->relationship('country', 'name')
                    ->searchable()
                    ->preload(),
                
                Tables\Filters\TernaryFilter::make('is_default')
                    ->label(__('admin.address.filters.is_default')),
            ])
            ->actions([
                Tables\Actions\ViewAction::make(),
                Tables\Actions\EditAction::make(),
                Tables\Actions\DeleteAction::make(),
            ])
            ->bulkActions([
                Tables\Actions\BulkActionGroup::make([
                    Tables\Actions\DeleteBulkAction::make(),
                ]),
            ])
            ->defaultSort('created_at', 'desc');
    }

    public static function getRelations(): array
    {
        return [
            //
        ];
    }

    public static function getPages(): array
    {
        return [
            'index' => Pages\ListAddresses::route('/'),
            'create' => Pages\CreateAddress::route('/create'),
            'view' => Pages\ViewAddress::route('/{record}'),
            'edit' => Pages\EditAddress::route('/{record}/edit'),
        ];
    }
}
