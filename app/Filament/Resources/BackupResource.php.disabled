<?php declare(strict_types=1);

namespace App\Filament\Resources;

use App\Filament\Resources\BackupResource\Pages;
use Filament\Resources\Resource;
use Filament\Tables\Table;
use Filament\Tables;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Model;
use UnitEnum;
use BackedEnum;

final class BackupResource extends Resource
{
    protected static ?string $model = null; // No model - this is a utility resource

    protected static BackedEnum|string|null $navigationIcon = 'heroicon-o-archive-box';

    protected static string|UnitEnum|null $navigationGroup = 'Settings';

    protected static ?int $navigationSort = 15;

    public static function getNavigationLabel(): string
    {
        return __('Backups');
    }

    public static function getModelLabel(): string
    {
        return __('Backup');
    }

    public static function getPluralModelLabel(): string
    {
        return __('Backups');
    }

    public static function table(Table $table): Table
    {
        return $table
            ->query(fn () => collect([]))
            ->columns([
                Tables\Columns\TextColumn::make('name')
                    ->label(__('Backup Name')),
                Tables\Columns\TextColumn::make('size')
                    ->label(__('Size')),
                Tables\Columns\TextColumn::make('created_at')
                    ->label(__('Created'))
                    ->dateTime(),
            ])
            ->actions([
                Tables\Actions\Action::make('download')
                    ->label(__('Download'))
                    ->icon('heroicon-o-arrow-down-tray')
                    ->color('primary'),
                Tables\Actions\Action::make('delete')
                    ->label(__('Delete'))
                    ->icon('heroicon-o-trash')
                    ->color('danger')
                    ->requiresConfirmation(),
            ])
            ->headerActions([
                Tables\Actions\Action::make('create_backup')
                    ->label(__('Create Backup'))
                    ->icon('heroicon-o-plus')
                    ->color('success')
                    ->action(function () {
                        // Implement backup creation logic
                        \Artisan::call('backup:run', ['--only-db' => true]);
                        
                        return redirect()->back()->with('success', __('Backup created successfully'));
                    })
                    ->requiresConfirmation()
                    ->modalHeading(__('Create Database Backup'))
                    ->modalDescription(__('This will create a backup of your database. This may take a few minutes.')),
            ])
            ->emptyStateHeading(__('No backups found'))
            ->emptyStateDescription(__('Create your first backup to secure your data'))
            ->emptyStateActions([
                Tables\Actions\Action::make('create_first_backup')
                    ->label(__('Create First Backup'))
                    ->icon('heroicon-o-plus')
                    ->color('success')
                    ->action(function () {
                        \Artisan::call('backup:run', ['--only-db' => true]);
                        return redirect()->back()->with('success', __('Backup created successfully'));
                    }),
            ]);
    }

    public static function getPages(): array
    {
        return [
            'index' => Pages\ListBackups::route('/'),
        ];
    }

    public static function canCreate(): bool
    {
        return false;
    }

    public static function canEdit($record): bool
    {
        return false;
    }

    public static function canView($record): bool
    {
        return false;
    }
}
